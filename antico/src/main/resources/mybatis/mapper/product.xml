<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.app.product.model.ProductDAO">
	
	<!-- 상품 개수 가져오기 (검색어, 카테고리번호, 가격대, 지역, 판매유형, 정렬 포함) -->
	<select id="getProductCnt" parameterType="HashMap" resultType="int">
		select COUNT(*) AS prod_count
		from tbl_product P 
		JOIN tbl_prod_img I ON P.pk_product_no = I.fk_product_no
		JOIN tbl_region R ON P.fk_region_no = R.pk_Region_No
		where I.prod_img_is_thumbnail = 1
		and P.product_sale_status IN (0, 1, 3, 4)
		<!-- 검색어가 있는 경우 -->
		<if test='search_prod != null and search_prod != ""'>
        	and lower(P.product_title) like '%'||lower(#{search_prod})||'%'
      	</if>
      	<!-- 상위 카테고리 번호가 있는 경우 -->
		<if test='category_no != null and category_no != ""'>
        	and P.fk_category_no = #{category_no}
      	</if>
      	<!-- 하위 카테고리 번호가 있는 경우 -->
		<if test='category_detail_no != null and category_detail_no != ""'>
        	and P.fk_category_detail_no = #{category_detail_no}
      	</if>
      	<!-- 판매유형이 있는 경우 -->
		<if test='sale_type != null and sale_type != ""'>
        	and P.product_sale_type = to_number(#{sale_type})
      	</if>      	
      	<!-- 최소가격 및 최대가격 설정 하는 경우  -->
      	<if test='min_price != null and min_price != ""'>
        	and P.product_price &gt;= to_number(#{min_price})
	    </if>
	    <if test='max_price != null and max_price != ""'>
	    	and P.product_price &lt;= to_number(#{max_price})
	    </if>
	    <if test='region != null and region != ""'>
	    	and P.fk_region_no = to_number(#{region})
	    </if>
	    <!-- 정렬 설정  -->
	    <choose>
	        <when test="sort_type == 'recent'">order by P.product_update_date desc</when>
	        <when test="sort_type == 'high'">order by P.product_price desc</when>
	        <when test="sort_type == 'low'">order by P.product_price asc</when>
	        <otherwise>order by P.product_update_date desc </otherwise>
	    </choose>
	</select>	
	
	
	<!-- 상품 가격 정보 가져오기 (검색어, 카테고리번호, 가격대, 지역, 판매유형, 정렬 포함) -->
	<resultMap id="getProductPriceMap" type="HashMap" >
	    <result property="avg_price" 	column="avg_price"  	javaType="String" />
	    <result property="max_price" 	column="max_price"  	javaType="String" />
	    <result property="min_price" 	column="min_price"  	javaType="String" />
    </resultMap>
	<select id="getProductPrice" parameterType="HashMap" resultMap="getProductPriceMap">
		SELECT TRUNC(AVG(TO_NUMBER(P.product_price))) AS avg_price, 
		       TRUNC(MAX(TO_NUMBER(P.product_price))) AS max_price, 
		       TRUNC(MIN(TO_NUMBER(P.product_price))) AS min_price
		FROM tbl_product P 
		JOIN tbl_prod_img I ON P.pk_product_no = I.fk_product_no
		JOIN tbl_region R ON P.fk_region_no = R.pk_region_no
		WHERE I.prod_img_is_thumbnail = 1
		and P.product_sale_status IN (0, 1, 3, 4)
		<!-- 검색어가 있는 경우 -->
		<if test='search_prod != null and search_prod != ""'>
        	and lower(P.product_title) like '%'||lower(#{search_prod})||'%'
      	</if>
      	<!-- 상위 카테고리 번호가 있는 경우 -->
		<if test='category_no != null and category_no != ""'>
        	and P.fk_category_no = #{category_no}
      	</if>
      	<!-- 하위 카테고리 번호가 있는 경우 -->
		<if test='category_detail_no != null and category_detail_no != ""'>
        	and P.fk_category_detail_no = #{category_detail_no}
      	</if>
      	<!-- 판매유형이 있는 경우 -->
		<if test='sale_type != null and sale_type != ""'>
        	and P.product_sale_type = to_number(#{sale_type})
      	</if>      	
      	<!-- 최소가격 및 최대가격 설정 하는 경우  -->
      	<if test='min_price != null and min_price != ""'>
        	and P.product_price &gt;= to_number(#{min_price})
	    </if>
	    <if test='max_price != null and max_price != ""'>
	    	and P.product_price &lt;= to_number(#{max_price})
	    </if>
	   	<if test='region != null and region != ""'>
	    	and P.fk_region_no = to_number(#{region})
	    </if>
	    <!-- 정렬 설정  -->
	    <choose>
	        <when test="sort_type == 'recent'">order by P.product_update_date desc</when>
	        <when test="sort_type == 'high'">order by P.product_price desc</when>
	        <when test="sort_type == 'low'">order by P.product_price asc</when>
	        <otherwise>order by P.product_update_date desc </otherwise>
	    </choose>   
	</select>
	
	

	<!-- 모든 상품에 대한 이미지,지역 정보 가져오기 (검색어, 카테고리번호, 가격대, 지역, 정렬, 판매유형,  페이징 처리 포함) -->
	<resultMap id="getProductMap" type="HashMap">
	    <result property="pk_product_no" 			column="pk_product_no"			javaType="String"/>
	    <result property="fk_member_no" 			column="fk_member_no" 			javaType="String"/>
	    <result property="fk_region_no" 			column="fk_region_no" 			javaType="String"/>
	    <result property="fk_category_no" 			column="fk_category_no" 		javaType="String"/>
	    <result property="fk_category_detail_no" 	column="fk_category_detail_no" 	javaType="String"/>  
	    <result property="product_title" 			column="product_title" 			javaType="String"/>
	    <result property="product_contents" 		column="product_contents" 		javaType="String"/>
	    <result property="product_price" 			column="product_price" 			javaType="String"/>
	    <result property="product_status" 			column="product_status" 		javaType="String"/>
	    <result property="product_sale_status" 		column="product_sale_status" 	javaType="String"/>
	    <result property="product_regdate" 			column="product_regdate" 		javaType="String"/>
	    <result property="product_update_date" 		column="product_update_date" 	javaType="String"/>
	    <result property="product_sale_type" 		column="product_sale_type" 		javaType="String"/>
	    <result property="product_views" 			column="product_views" 			javaType="String"/>
	    <result property="pk_prod_img_no" 			column="pk_prod_img_no" 		javaType="String"/>
	    <result property="prod_img_name" 			column="prod_img_name" 			javaType="String"/>
	    <result property="prod_img_org_name" 		column="prod_img_org_name" 		javaType="String"/>
	    <result property="prod_img_is_thumbnail" 	column="prod_img_is_thumbnail" 	javaType="String"/>
	    <result property="pk_region_no" 			column="pk_region_no" 			javaType="String"/>
	    <result property="region_state" 			column="region_state" 			javaType="String"/>
	    <result property="region_city" 				column="region_city" 			javaType="String"/>
	    <result property="region_town" 				column="region_town" 			javaType="String"/>
	    <result property="region_lat" 				column="region_lat" 			javaType="String"/>
	    <result property="region_lng" 				column="region_lng" 			javaType="String"/>
	</resultMap>
	<select id="getProduct" parameterType="HashMap" resultMap="getProductMap">
		SELECT pk_product_no, fk_member_no, fk_region_no, fk_category_no, fk_category_detail_no, product_title, product_contents, 
			   product_price, product_status, product_sale_status, product_regdate, product_update_date, product_sale_type, product_views, pk_prod_img_no,
			   prod_img_name, prod_img_org_name, prod_img_is_thumbnail, pk_region_no, region_state, region_city, region_town, region_lat, region_lng
		FROM(
				SELECT rownum AS rnum, p.*
				FROM(
					select P.pk_product_no, 
					       P.fk_member_no, 
					       P.fk_region_no, 
					       P.fk_category_no, 
					       P.fk_category_detail_no, 
					       P.product_title, 
					       P.product_contents, 
					       P.product_price, 
					       P.product_status, 
					       P.product_sale_status, 
					       P.product_regdate, 
					       P.product_update_date, 
					       P.product_sale_type, 
					       P.product_views,
					       I.pk_prod_img_no,
					       I.prod_img_name,
					       I.prod_img_org_name,
					       I.prod_img_is_thumbnail,
					       R.pk_region_no,
					       R.region_state,
					       R.region_city,
					       R.region_town,
					       R.region_lat,
					       R.region_lng
					from tbl_product P 
					JOIN tbl_prod_img I ON P.pk_product_no = I.fk_product_no
					JOIN tbl_region R ON P.fk_region_no = R.pk_Region_No
					where I.prod_img_is_thumbnail = 1
					and P.product_sale_status IN (0, 1, 3, 4)
					<!-- 검색어가 있는 경우 -->
					<if test='search_prod != null and search_prod != ""'>
			        	and lower(P.product_title) like '%'||lower(#{search_prod})||'%'
			      	</if>
			      	<!-- 상위 카테고리 번호가 있는 경우 -->
					<if test='category_no != null and category_no != ""'>
			        	and P.fk_category_no = #{category_no}
			      	</if>
			      	<!-- 하위 카테고리 번호가 있는 경우 -->
					<if test='category_detail_no != null and category_detail_no != ""'>
			        	and P.fk_category_detail_no = #{category_detail_no}
			      	</if>
			      	<!-- 판매유형이 있는 경우 -->
					<if test='sale_type != null and sale_type != ""'>
			        	and P.product_sale_type = #{sale_type}
			      	</if> 			      	     	
					<!-- 최소가격 및 최대가격 설정 하는 경우  -->
			      	<if test='min_price != null and min_price != ""'>
			        	and P.product_price &gt;= to_number(#{min_price})
				    </if>
				    <if test='max_price != null and max_price != ""'>
				    	and P.product_price &lt;= to_number(#{max_price})
				    </if>   
				    <if test='region != null and region != ""'>
				    	and P.fk_region_no = to_number(#{region}) and R.region_town = #{town}
				    </if>    	
					
					<!-- 정렬 설정  -->
				    <choose>
				        <when test="sort_type == 'recent'">order by P.product_update_date desc</when>
				        <when test="sort_type == 'high'">order by P.product_price desc</when>
				        <when test="sort_type == 'low'">order by P.product_price asc</when>
				        <otherwise>order by P.product_update_date desc</otherwise>
				    </choose>	    
				 )	P
			 )
			 WHERE rnum BETWEEN #{paging_dto.first_row} AND #{paging_dto.last_row}
	</select>
	
	
	<!-- 상품 목록 지역 선택창에서 현재 위치 클릭하여 근처 동네 5개 알아오기 -->
	<resultMap id="nearRegionMap" type="HashMap">
	    <result property="pk_region_no" 	column="pk_region_no"		javaType="String"/>
	    <result property="region_state" 	column="region_state" 		javaType="String"/>
	    <result property="region_city" 		column="region_city" 		javaType="String"/>
	    <result property="region_town" 		column="region_town" 		javaType="String"/>
	    <result property="region_lat" 		column="region_lat" 		javaType="String"/>
	    <result property="region_lng" 		column="region_lng" 		javaType="String"/>
	    <result property="distance" 		column="distance" 		    javaType="String"/>   
	</resultMap>
	<select id="nearRegion" parameterType="HashMap" resultMap="nearRegionMap">
	select pk_region_no, region_state, region_city, region_town, region_lat, region_lng, distance 
	from (
	    select pk_region_no, region_state, region_city, region_town, region_lat, region_lng, distance
	    from (
	        select 
	            pk_region_no, region_state, region_city, region_town, region_lat, region_lng,
	            (6371 * acos(least(1, greatest(-1,
	                cos(region_lat * (acos(-1) / 180)) * cos(#{current_lat} * (acos(-1) / 180)) 
	                * cos((region_lng - #{current_lng}) * (acos(-1) / 180)) 
	                + sin(region_lat * (acos(-1) / 180)) * sin(#{current_lat} * (acos(-1) / 180))
	            )))) as distance
	        from tbl_region
	        order by distance asc  
	    )
	    where rownum &lt;= 5  
	)
	order by region_city asc
	</select>




	<!-- 특정 상품에 대한 상품 및 대표이미지 정보 가져오기 -->
	<resultMap id="getProductInfoMap" type="HashMap">
	    <result property="pk_product_no" 			column="pk_product_no"			javaType="String"/>
	    <result property="fk_member_no" 			column="fk_member_no" 			javaType="String"/>
	    <result property="fk_region_no" 			column="fk_region_no" 			javaType="String"/>
	    <result property="fk_category_no" 			column="fk_category_no" 		javaType="String"/>
	    <result property="fk_category_detail_no" 	column="fk_category_detail_no" 	javaType="String"/>  
	    <result property="product_title" 			column="product_title" 			javaType="String"/>
	    <result property="product_contents" 		column="product_contents" 		javaType="String"/>
	    <result property="product_price" 			column="product_price" 			javaType="String"/>
	    <result property="product_status" 			column="product_status" 		javaType="String"/>
	    <result property="product_sale_status" 		column="product_sale_status" 	javaType="String"/>
	    <result property="product_regdate" 			column="product_regdate" 		javaType="String"/>
	    <result property="product_update_date" 		column="product_update_date" 	javaType="String"/>
	    <result property="product_sale_type" 		column="product_sale_type" 		javaType="String"/>
	    <result property="product_views" 			column="product_views" 			javaType="String"/>
	    <result property="pk_prod_img_no" 			column="pk_prod_img_no" 		javaType="String"/>
	    <result property="prod_img_org_name" 		column="prod_img_org_name" 		javaType="String"/>
	    <result property="prod_img_is_thumbnail" 	column="prod_img_is_thumbnail" 	javaType="String"/>
	    <result property="prod_img_name" 			column="prod_img_name" 			javaType="String"/>
	    <result property="member_name" 				column="member_name" 			javaType="String"/>
	</resultMap>
	<select id="getProductInfo" parameterType="HashMap" resultMap="getProductInfoMap">
      select P.pk_product_no, 
            P.fk_member_no, 
            P.fk_region_no, 
            P.fk_category_no, 
            P.fk_category_detail_no, 
            P.product_title, 
            P.product_contents, 
            P.product_price, 
            P.product_status, 
            P.product_sale_status, 
            P.product_regdate, 
            P.product_update_date, 
            P.product_sale_type, 
            P.product_views,
            I.pk_prod_img_no,
            I.prod_img_org_name,
            I.prod_img_name,
            I.prod_img_is_thumbnail,
            M.member_name
      from tbl_product P JOIN tbl_prod_img I
      ON P.pk_product_no = I.fk_product_no
      JOIN tbl_member M ON M.pk_member_no = P.fk_member_no
      where P.pk_product_no = #{pk_product_no}
      and   I.prod_img_is_thumbnail = 1
   </select>

	<!-- 상위 카테고리 정보 가져오기 -->
	<select id="getCategory" resultType="CategoryVO">
		select pk_category_no, category_name
		from tbl_category
	</select>
	
	
	<!-- 하위 카테고리 정보 가져오기 -->
	<select id="getCategoryDetail" resultType="CategoryDetailVO">
		select pk_category_detail_no, fk_category_no, category_detail_name
		from tbl_category_detail
	</select>
	
	
	<!-- 지역 정보 가져오기 -->
	<resultMap id="getRegionMap" type="HashMap">
	    <result property="pk_region_no" column="pk_region_no" 	javaType="String"/>
	    <result property="region_state" column="region_state"	javaType="String"/>
	    <result property="region_city"  column="region_city"	javaType="String"/>
	    <result property="region_town" 	column="region_town"	javaType="String"/>
	    <result property="region_lat" 	column="region_lat"		javaType="String"/>
	    <result property="region_lng" 	column="region_lng"		javaType="String"/>
	</resultMap>
	<select id="getRegion" parameterType="HashMap" resultMap="getRegionMap">
		select pk_region_no
		     , region_state
		     , region_city
		     , region_town
		     , region_lat
		     , region_lng
		from tbl_region
		order by pk_region_no
	</select>
	
	<!-- 좋아요 정보 가져오기 -->
	<resultMap id="getWishMap" type="HashMap">
	    <result property="pk_wish_no" 	 column="pk_wish_no" 	javaType="String"/>
	    <result property="fk_product_no" column="fk_product_no"	javaType="String"/>
	    <result property="fk_member_no"  column="fk_member_no"	javaType="String"/>
	</resultMap>
	<select id="getWish" parameterType="HashMap" resultMap="getWishMap">
		select pk_wish_no, fk_product_no, fk_member_no
		from tbl_wish
	</select>
	
	
	
	<!-- 지역 검색창에서 지역 검색 시 자동글 완성하기 및 정보 가져오기 -->
	<resultMap id="RegionResultMap" type="HashMap">
	    <result property="pk_region_no" column="pk_region_no" 	javaType="String"/>
	    <result property="full_address" column="full_address"	javaType="String"/>
	    <result property="region_town" 	column="region_town"	javaType="String"/>
	    <result property="region_lat" 	column="region_lat"		javaType="String"/>
	    <result property="region_lng" 	column="region_lng"		javaType="String"/>
	</resultMap>
	
	<select id="regionSearch" parameterType="HashMap" resultMap="RegionResultMap">
		select pk_region_no
		     , region_state || ' ' || region_city || ' ' || region_town AS FULL_ADDRESS
		     , region_town
		     , region_lat, region_lng
		from tbl_region
		where lower(region_town) like '%'||lower(#{search_word})||'%'
		order by region_town asc
	</select>
	
	
	<!-- 상품번호 채번해오기 (상품 및 이미지 테이블 저장하기 위해) -->
	<select id="getNo" resultType="String">
		select prod_seq.nextval
		from dual
	</select>
	

	<!-- 상품 테이블에 상품 정보 저장  -->
	<insert id="addProduct" parameterType="ProductVO">
		<!-- 판매 유형이 일반 판매인 경우 => 판매중/일반판매로 insert -->
		<if test="product_sale_type == 0"> 
		insert into tbl_product (pk_product_no, fk_member_no, fk_region_no, fk_category_no, fk_category_detail_no, product_title
		                       , product_contents, product_price, product_status, product_sale_status, product_regdate, product_update_date, product_sale_type, product_views)
			    		  values(#{pk_product_no}, #{fk_member_no}, #{fk_region_no}, #{fk_category_no}, #{fk_category_detail_no}, #{product_title}
			    		       , #{product_contents}, #{product_price}, #{product_status}, 0, default, default, #{product_sale_type}, default)
		</if>
		
		<!-- 판매 유형이 경매인 경우 => 경매시작전/경매로 insert -->
		<if test="product_sale_type == 1">
		insert into tbl_product (pk_product_no, fk_member_no, fk_region_no, fk_category_no, fk_category_detail_no, product_title
		                       , product_contents, product_price, product_status, product_sale_status, product_regdate, product_update_date, product_sale_type, product_views)
			    		  values(#{pk_product_no}, #{fk_member_no}, #{fk_region_no}, #{fk_category_no}, #{fk_category_detail_no}, #{product_title}
			    		       , #{product_contents}, #{product_price}, #{product_status}, 3, default, default, #{product_sale_type}, default)	
		</if>
	</insert>


    <!-- 이미지 테이블에 파일 넣어주기 -->
	<insert id="addImage" parameterType="ProductImageVO">
		insert into tbl_prod_img(pk_prod_img_no, fk_product_no, prod_img_name, prod_img_org_name, prod_img_is_thumbnail)  
					 	 values (pi_seq.NEXTVAL, #{fk_product_no}, #{prod_img_name}, #{prod_img_org_name}, #{prod_img_is_thumbnail})
	</insert>
	
	
	<!-- 관심상품에 이미 상품이 존재하는지 확인하기 --> 
	<select id="getWishCheck" parameterType="String">
		select pk_wish_no
		from tbl_wish
		where fk_product_no = to_number(#{fk_product_no}) 
		and fk_member_no = to_number(#{fk_member_no})
	</select>
	
	
	<!-- 관심 상품에서 상품 삭제하기 -->
	<delete id="wishDelete" parameterType="String">
		delete 
		from tbl_wish
		where fk_product_no =  to_number(#{fk_product_no}) 
		and fk_member_no = to_number(#{fk_member_no})
	</delete>
	
	
	<!-- 관심상품에 상품 추가하기 -->
	<insert id="wishInsert" parameterType="String">
		insert into tbl_wish(pk_wish_no, fk_product_no, fk_member_no)
				  	  values(wish_seq.NEXTVAL, to_number(#{fk_product_no}), to_number(#{fk_member_no}))
	</insert>
	
	
	<!-- 상품 올린 회원에 대한 거래 횟수 알아오기 -->
	<select id="getTradeCntOneMember" parameterType="String" resultType="String">
		select count(*) as trade_cnt
		from tbl_trade
		where (fk_seller_no = #{fk_member_no2} or fk_consumer_no = #{fk_member_no2}) 
		and trade_status = 2
	</select>
	
	
	<!-- 상품 올린 회원에 대한 후기 수 알아오기 -->
	<select id="getReviewCntOneMember" parameterType="String" resultType="String">
		select count(*) as review_cnt
		from tbl_trade T JOIN tbl_review R
		ON T.pk_trade_no = R.fk_trade_no
		where (fk_seller_no = #{fk_member_no2} or fk_consumer_no = #{fk_member_no2}) 
		and trade_status = 2
	</select>
	
	
	<!-- 상품 올린 회원에 대한 단골 수 알아오기 -->
	<select id="getRegularCustomerCnt" parameterType="String" resultType="String">
		select count(*) as regular_customer_cnt
		from (
		    select fk_consumer_no
		    from tbl_trade
		    where fk_seller_no = #{fk_member_no2}   <!-- 특정 회원이 판매자로서 거래한 경우만 조회 -->
		    and trade_status = 2         			<!-- 거래 완료 상태만 조회 -->
		    group by fk_consumer_no
		    having count(*) >= 3         			<!-- 3회 이상 거래한 고객만 필터링 -->
		) regular_customers
	</select>
	
	
	<!-- 특정 회원에 대한 상품 정보 가져오기 -->
	<resultMap id="getProdcutOneMemberMap" type="HashMap">
	    <result property="pk_product_no" 			column="pk_product_no"			javaType="String"/>
	    <result property="fk_member_no" 			column="fk_member_no" 			javaType="String"/>
	    <result property="fk_region_no" 			column="fk_region_no" 			javaType="String"/>
	    <result property="fk_category_no" 			column="fk_category_no" 		javaType="String"/>
	    <result property="fk_category_detail_no" 	column="fk_category_detail_no" 	javaType="String"/>  
	    <result property="product_title" 			column="product_title" 			javaType="String"/>
	    <result property="product_contents" 		column="product_contents" 		javaType="String"/>
	    <result property="product_price" 			column="product_price" 			javaType="String"/>
	    <result property="product_status" 			column="product_status" 		javaType="String"/>
	    <result property="product_sale_status" 		column="product_sale_status" 	javaType="String"/>
	    <result property="product_regdate" 			column="product_regdate" 		javaType="String"/>
	    <result property="product_update_date" 		column="product_update_date" 	javaType="String"/>
	    <result property="product_sale_type" 		column="product_sale_type" 		javaType="String"/>
	    <result property="product_views" 			column="product_views" 			javaType="String"/>
	    <result property="pk_prod_img_no" 			column="pk_prod_img_no" 		javaType="String"/>
	    <result property="prod_img_org_name" 		column="prod_img_org_name" 		javaType="String"/>
	    <result property="prod_img_is_thumbnail" 	column="prod_img_is_thumbnail" 	javaType="String"/>
	    <result property="prod_img_name" 			column="prod_img_name" 			javaType="String"/>
	    <result property="member_name" 				column="member_name" 			javaType="String"/>
	</resultMap>
	<select id="getProdcutOneMember" parameterType="HashMap" resultMap="getProdcutOneMemberMap">
      	select P.pk_product_no, 
        	   P.fk_member_no, 
               P.fk_region_no, 
               P.fk_category_no, 
               P.fk_category_detail_no, 
               P.product_title, 
               P.product_contents, 
               P.product_price, 
               P.product_status, 
               P.product_sale_status, 
               P.product_regdate, 
               P.product_update_date, 
               P.product_sale_type, 
               P.product_views,
               I.pk_prod_img_no,
               I.prod_img_org_name,
               I.prod_img_name,
               I.prod_img_is_thumbnail,
               M.member_name
      	from tbl_product P JOIN tbl_prod_img I
     	ON P.pk_product_no = I.fk_product_no
      	JOIN tbl_member M ON M.pk_member_no = P.fk_member_no
      	where P.fk_member_no = #{fk_member_no2}
      	and   P.product_sale_status IN (0, 1, 3, 4)
      	and   I.prod_img_is_thumbnail = 1
      	and   P.pk_product_no != #{pk_product_no}
      	order by P.product_update_date desc
	</select>
	
	
	
	<!-- 특정 상품에 대한 이미지 정보 가져오기 -->
	<select id="getProductImg" resultType="ProductImageVO">
		select pk_prod_img_no, fk_product_no, prod_img_name, prod_img_org_name, prod_img_is_thumbnail
		from tbl_prod_img
		where fk_product_no = #{pk_product_no}
		order by pk_prod_img_no asc
	</select>

	
	<!-- 특정 상품에 대한 정보 가져오기(이미지, 지역, 회원, 카테고리, 경매정보) -->
	<resultMap id="getProductDetailMap" type="HashMap">
	    <result property="pk_product_no" 			column="pk_product_no"			javaType="String"/>
	    <result property="fk_member_no" 			column="fk_member_no" 			javaType="String"/>
	    <result property="fk_region_no" 			column="fk_region_no" 			javaType="String"/>
	    <result property="fk_category_no" 			column="fk_category_no" 		javaType="String"/>
	    <result property="fk_category_detail_no" 	column="fk_category_detail_no" 	javaType="String"/>  
	    <result property="product_title" 			column="product_title" 			javaType="String"/>
	    <result property="product_contents" 		column="product_contents" 		javaType="String"/>
	    <result property="product_price" 			column="product_price" 			javaType="String"/>
	    <result property="product_status" 			column="product_status" 		javaType="String"/>
	    <result property="product_sale_status" 		column="product_sale_status" 	javaType="String"/>
	    <result property="product_regdate" 			column="product_regdate" 		javaType="String"/>
	    <result property="product_update_date" 		column="product_update_date" 	javaType="String"/>
	    <result property="product_sale_type" 		column="product_sale_type" 		javaType="String"/>
	    <result property="product_views" 			column="product_views" 			javaType="String"/>
	    <result property="pk_region_no" 			column="pk_region_no" 			javaType="String"/>
	    <result property="region_state" 			column="region_state" 			javaType="String"/>
	    <result property="region_city" 				column="region_city" 			javaType="String"/>
	    <result property="region_town" 				column="region_town" 			javaType="String"/>
	    <result property="region_lat" 				column="region_lat" 			javaType="String"/>
	    <result property="region_lng" 				column="region_lng" 			javaType="String"/>
	    <result property="member_name" 				column="member_name" 			javaType="String"/>
	    <result property="member_role" 				column="member_role" 			javaType="String"/>
	    <result property="member_score" 			column="member_score" 			javaType="String"/>
	    <result property="category_name" 			column="category_name" 			javaType="String"/>
	    <result property="category_detail_name" 	column="category_detail_name" 	javaType="String"/>
	    <result property="auction_enddate" 			column="auction_enddate" 		javaType="String"/>
	    <result property="auction_startdate" 		column="auction_startdate" 		javaType="String"/>
	</resultMap>
	<select id="getProductDetail" parameterType="HashMap" resultMap="getProductDetailMap">
		select P.pk_product_no, 
		       P.fk_member_no, 
		       P.fk_region_no, 
		       P.fk_category_no, 
		       P.fk_category_detail_no, 
		       P.product_title, 
		       P.product_contents, 
		       P.product_price, 
		       P.product_status, 
		       P.product_sale_status, 
		       P.product_regdate, 
		       P.product_update_date, 
		       P.product_sale_type, 
		       P.product_views,
		       R.pk_region_no,
		       R.region_state,
		       R.region_city,
		       R.region_town,
		       R.region_lat,
		       R.region_lng,
		       M.member_name,
		       M.member_role,
		       M.member_score,
		       C.category_name,
		       D.category_detail_name,
		       A.pk_auction_no,
       		   to_char(A.auction_enddate, 'YYYY-MM-DD HH24:MI') AS auction_enddate,
               to_char(A.auction_startdate, 'YYYY-MM-DD HH24:MI') AS auction_startdate
		from tbl_product P 
		JOIN tbl_region R ON P.fk_region_no = R.pk_region_no
		JOIN tbl_member M ON P.fk_member_no = M.pk_member_no
		JOIN tbl_category C ON P.fk_category_no = C.pk_category_no
		JOIN tbl_category_detail D ON P.fk_category_detail_no = D.pk_category_detail_no
		LEFT JOIN tbl_auction A ON P.pk_product_no = A.fk_product_no
		where P.pk_product_no = #{pk_product_no}	
	</select>
	
	
	<!-- 상품 조회수 증가하기 -->
	<update id="increaseViewCount" parameterType="String">
		update tbl_product
		set product_views = product_views + 1
		where pk_product_no = #{pk_product_no}
	</update>
	
	
	<!-- "위로올리기" 클릭 시 상품 등록일자 업데이트 하기 -->
	<update id="regDateUpdate" parameterType="String">
		update tbl_product 
		set product_update_date = SYSDATE  
		where pk_product_no = #{pk_product_no}
	</update>
	
	
	<!-- "상태변경" 클릭 시 상품 상태 업데이트 하기 -->
	<update id="saleStatusUpdate" parameterType="String">
		update tbl_product 
		set product_sale_status = #{sale_status_no} 
		where pk_product_no = #{pk_product_no}
	</update>
	
	
	<!-- 상품 수정하기 -->
	<update id="updateProduct" parameterType="ProductVO">
		update tbl_product set 
		fk_region_no = #{fk_region_no},
		fk_category_no = #{fk_category_no}, 
		fk_category_detail_no = #{fk_category_detail_no}, 
		product_title = #{product_title}, 
		product_contents = #{product_contents}, 
		product_price = #{product_price}, 
		product_status = #{product_status}, 
		product_update_date = SYSDATE
		where pk_product_no = #{pk_product_no}
	</update>
		
	
	<!-- 이미지 테이블에서 기존 이미지들 일괄 삭제하기 -->
	<delete id="deleteOriginImg" parameterType="ProductImageVO">
		delete
		from tbl_prod_img
		where prod_img_name = #{prod_img_name}
	</delete>
	
	<!-- 기존이미지 썸네일 업데이트 하기 -->
	<update id="updateThumbnail" parameterType="ProductImageVO">
		update tbl_prod_img
		set prod_img_is_thumbnail = ${prod_img_is_thumbnail}
		where pk_prod_img_no = ${pk_prod_img_no}
	</update>
	
	
	<!-- "상품삭제" 클릭 시 상품 삭제하기 -->
	<delete id="delete" parameterType="String">
		delete 
		from tbl_product
		where pk_product_no = #{pk_product_no}
	</delete>

	
	<!-- 모든 상품 조회 해오기(이미지 포함) -->
	<resultMap id="getProductListMap" type="HashMap">
	    <result property="pk_product_no" 			column="pk_product_no"			javaType="String"/>
	    <result property="fk_member_no" 			column="fk_member_no" 			javaType="String"/>
	    <result property="fk_region_no" 			column="fk_region_no" 			javaType="String"/>
	    <result property="fk_category_no" 			column="fk_category_no" 		javaType="String"/>
	    <result property="fk_category_detail_no" 	column="fk_category_detail_no" 	javaType="String"/>  
	    <result property="product_title" 			column="product_title" 			javaType="String"/>
	    <result property="product_contents" 		column="product_contents" 		javaType="String"/>
	    <result property="product_price" 			column="product_price" 			javaType="String"/>
	    <result property="product_status" 			column="product_status" 		javaType="String"/>
	    <result property="product_sale_status" 		column="product_sale_status" 	javaType="String"/>
	    <result property="product_regdate" 			column="product_regdate" 		javaType="String"/>
	    <result property="product_update_date" 		column="product_update_date" 	javaType="String"/>
	    <result property="product_sale_type" 		column="product_sale_type" 		javaType="String"/>
	    <result property="product_views" 			column="product_views" 			javaType="String"/>
	    <result property="pk_prod_img_no" 			column="pk_prod_img_no" 		javaType="String"/>
	    <result property="prod_img_name" 			column="prod_img_name" 			javaType="String"/>
	    <result property="prod_img_org_name" 		column="prod_img_org_name" 		javaType="String"/>
	    <result property="prod_img_is_thumbnail" 	column="prod_img_is_thumbnail" 	javaType="String"/>
	    <result property="pk_region_no" 			column="pk_region_no" 			javaType="String"/>
	    <result property="region_state" 			column="region_state" 			javaType="String"/>
	    <result property="region_city" 				column="region_city" 			javaType="String"/>
	    <result property="region_town" 				column="region_town" 			javaType="String"/>
	    <result property="region_lat" 				column="region_lat" 			javaType="String"/>
	    <result property="region_lng" 				column="region_lng" 			javaType="String"/>
	</resultMap>
	<select id="getProductList" parameterType="HashMap" resultMap="getProductListMap">
		select P.pk_product_no, 
		       P.fk_member_no, 
		       P.fk_region_no, 
		       P.fk_category_no, 
		       P.fk_category_detail_no, 
		       P.product_title, 
		       P.product_contents, 
		       P.product_price, 
		       P.product_status, 
		       P.product_sale_status, 
		       P.product_regdate, 
		       P.product_update_date, 
		       P.product_sale_type, 
		       P.product_views,
		       I.pk_prod_img_no,
		       I.prod_img_name,
		       I.prod_img_org_name,
		       I.prod_img_is_thumbnail,
		       R.pk_region_no,
		       R.region_state,
		       R.region_city,
		       R.region_town,
		       R.region_lat,
		       R.region_lng
		from tbl_product P 
		JOIN tbl_prod_img I ON P.pk_product_no = I.fk_product_no
		JOIN tbl_region R ON P.fk_region_no = R.pk_Region_No
		where I.prod_img_is_thumbnail = 1
		and P.product_sale_status IN (0, 1, 3, 4)
		<if test='sort_views_week != null and sort_views_week != ""'>
			and product_update_date >= trunc(sysdate) -7 <!-- 최근 7일 이내 등록된 상품 -->
		</if>
		<choose>
	        <when test="sort_views_week == 'sort_views_week'">order by P.product_views desc</when>
	        <otherwise>order by P.product_update_date desc</otherwise> <!-- 방금 등록된 상품 -->
	    </choose>	
	</select>
	
	
	<!-- 검색어에 맞는 시세 조회 -->
	<resultMap id="getMargetPriceMap" type="HashMap">
	    <result property="product_update_date" 	column="product_update_date"  javaType="String"/>
	    <result property="avg_price" 			column="avg_price" 			  javaType="String"/>
	</resultMap>	
	<select id="getMargetPrice" parameterType="HashMap" resultMap="getMargetPriceMap">
	<!-- 검색어에 맞는 상품의 가장 최근의 update 날짜로부터 7일간의 데이터 -->
		with date_range as (
		    select trunc(max(p.product_update_date)) as product_update_date
		    from tbl_product p
		    join tbl_prod_img i on p.pk_product_no = i.fk_product_no
		    where i.prod_img_is_thumbnail = 1
		      and p.product_sale_status in (0, 1, 3, 4)
		      and lower(p.product_title) like '%' || lower(#{search_price}) || '%'
		),
		    date_list as (
		        select product_update_date - level + 1 as product_update_date
		        from date_range
		        connect by level &lt;= 7
		        order by product_update_date desc
		    ),
		    filtered_products as (
		        select trunc(p.product_update_date) as product_update_date, p.product_price
		        from tbl_product p
		        join tbl_prod_img i on p.pk_product_no = i.fk_product_no
		        where i.prod_img_is_thumbnail = 1
		          and p.product_sale_status in (0, 1, 3, 4)
		          and lower(p.product_title) like '%' || lower(#{search_price}) || '%'
		    )
		select to_char(d.product_update_date, 'MM-DD') as product_update_date,
		       nvl(trunc(avg(to_number(f.product_price))), 0) as avg_price
		from date_list d
		left join filtered_products f 
		       on f.product_update_date = d.product_update_date
		group by d.product_update_date
		order by d.product_update_date
	</select>
	
	
	<!-- 메인 검색창에서 상품 검색 시 자동글 완성하기 및 정보 가져오기 -->
	<resultMap id="ProductSearchMap" type="HashMap">
		<result property="pk_product_no" column="pk_product_no" javaType="String"/>
	    <result property="product_title" column="product_title" javaType="String"/>
	</resultMap>
	<select id="productSearch" parameterType="HashMap" resultMap="ProductSearchMap">
		select pk_product_no, product_title
		from tbl_product
		where lower(product_title) like '%'||lower(#{search_prod})||'%'
		and product_sale_status IN (0, 1, 3, 4)
		order by product_title asc
	</select>	
	
	
	
	<!-- 메인 검색창에서 판매자 검색 시 자동글 완성하기 및 정보 가져오기 -->
	<resultMap id="SellerSearchMap" type="HashMap">
		<result property="pk_member_no" column="pk_member_no" javaType="String"/>
	    <result property="member_name"  column="member_name"  javaType="String"/>
	</resultMap>
	<select id="sellerSearch" parameterType="HashMap" resultMap="SellerSearchMap">
		select pk_member_no, member_name
		from tbl_member
		where lower(member_name) like '%'||lower(#{search_prod})||'%'
		and member_status = 1
		and member_role IN (0, 1, 3)
		order by member_name asc
	</select>		
	
	

	
	<!-- 상품 요약 정보 목록 조회 (이미지명 포함) -->
	<select id="selectProductSummaryList" resultType="productChatDTO">
		select p.pk_product_no, p.product_title, p.product_price, pi.prod_img_name
		from tbl_product p join tbl_prod_img pi on p.pk_product_no = pi.fk_product_no
		where pi.prod_img_is_thumbnail = 1
		and p.pk_product_no in
		<foreach collection="list" item="pk_product_no" open="(" separator="," close=")">
			#{pk_product_no}
		</foreach> 
		order by pk_product_no
	</select>

	
	<!-- 경매 상품 이미지 등록 -->
	<insert id="insertAuctionProductImage">
		insert into tbl_prod_img(pk_prod_img_no, fk_product_no, prod_img_name, prod_img_org_name, prod_img_is_thumbnail)
	    <!-- select 결과 집합이 그대로 tbl_prod_img 테이블로 삽입 -->
	    select pi_seq.nextval, #{c_product_no}, prod_img_name, prod_img_org_name, prod_img_is_thumbnail
	    from (
	    	<!-- union all을 통해 여러 행의 select 결과 값이 생성 -->
	        <foreach collection="fileList" item="map" separator=" UNION ALL " index="index">
	        	select 	#{map.file_name} as prod_img_name, #{map.org_file_name} as prod_img_org_name, 
	        			(case when #{index} = 0 then 1 else 0 end) as prod_img_is_thumbnail
	        	from dual
	        </foreach>
	    ) a
	</insert>

	<resultMap id="getwishwithproductandimagemap" type="HashMap">
	    <!-- tbl_wish 테이블의 컬럼 -->
	    <result property="pk_wish_no"      column="pk_wish_no"        javaType="String"/>
	    <result property="fk_product_no"   column="fk_product_no"     javaType="String"/>
	    <result property="fk_member_no"    column="fk_member_no"      javaType="String"/>
	
	    <!-- tbl_product 테이블의 컬럼 -->
	    <result property="pk_product_no"   column="pk_product_no"     javaType="String"/>
	    <result property="fk_member_no"    column="product_fk_member_no" javaType="String"/>
	    <result property="fk_region_no"    column="fk_region_no"      javaType="String"/>
	    <result property="fk_category_no"  column="fk_category_no"    javaType="String"/>
	    <result property="fk_category_detail_no" column="fk_category_detail_no" javaType="String"/>
	    <result property="product_title"   column="product_title"     javaType="String"/>
	    <result property="product_contents" column="product_contents" javaType="String"/>
	    <result property="product_price"   column="product_price"     javaType="String"/>
	    <result property="product_status"  column="product_status"    javaType="String"/>
	    <result property="product_sale_status" column="product_sale_status" javaType="String"/>
	    <result property="product_regdate" column="product_regdate"  javaType="String"/>
	    <result property="product_update_date" column="product_update_date" javaType="String"/>
	    <result property="product_sale_type" column="product_sale_type" javaType="String"/>
	    <result property="product_views"   column="product_views"     javaType="String"/>
	
	    <!-- tbl_prod_img 테이블의 컬럼 -->
	    <result property="pk_prod_img_no"  column="pk_prod_img_no"    javaType="String"/>
	    <result property="prod_img_org_name" column="prod_img_org_name" javaType="String"/>
	    <result property="prod_img_name"   column="prod_img_name"     javaType="String"/>
	    <result property="prod_img_is_thumbnail" column="prod_img_is_thumbnail" javaType="String"/>
	</resultMap>

	
	<select id="wish_list" parameterType="HashMap" resultMap="getwishwithproductandimagemap">
	    select w.pk_wish_no, w.fk_product_no, w.fk_member_no,	
	           p.pk_product_no,
	           p.fk_member_no as product_fk_member_no,
	           p.fk_region_no,
	           p.fk_category_no,
	           p.fk_category_detail_no,
	           p.product_title,
	           p.product_contents,
	           p.product_price,
	           p.product_status,
	           p.product_sale_status,
	           p.product_regdate,
	           p.product_update_date,
	           p.product_sale_type,
	           p.product_views,
	
	           i.pk_prod_img_no,
	           i.prod_img_org_name,
	           i.prod_img_name,
	           i.prod_img_is_thumbnail	
	    from tbl_wish w
	    left join tbl_product p on w.fk_product_no = p.pk_product_no
	    left join tbl_prod_img i on p.pk_product_no = i.fk_product_no
	    where w.fk_member_no = #{fk_member_no}
	</select>


	<!--경매 낙찰가로 상품가격 변경-->
	<update id="updateProductPrice" parameterType="String">
		update tbl_product set product_price = #{product_price}
		where pk_product_no = #{pk_product_no}
	</update>

</mapper>



